<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Jessie Li, Will You Be My Valentine?</title>

  <style>
    /* --------------------------------------------------------------------------
       1. GLOBAL STYLES
    -------------------------------------------------------------------------- */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      background: #ffe6e6; /* Soft pink */
      overflow-x: hidden; /* prevents scroll if "No" button moves off-screen */
      color: #333;
      transition: background-color 0.5s ease; /* Smooth background transitions */
    }

    /* --------------------------------------------------------------------------
       2. DISCO BACKGROUND (Dance Animation)
    -------------------------------------------------------------------------- */
    @keyframes discoBG {
      0%   { background-color: #ffe6e6; } /* start: soft pink */
      25%  { background-color: #ffcce0; } /* a bit darker pink */
      50%  { background-color: #fff0f0; } /* near white */
      75%  { background-color: #ffd9f3; } /* pastel pink/purple */
      100% { background-color: #ffe6e6; } /* back to start */
    }
    /* When body.disco is active, it cycles background colors */
    body.disco {
      animation: discoBG 2s linear infinite;
    }

    /* --------------------------------------------------------------------------
       3. FLOATING HEARTS BACKGROUND
    -------------------------------------------------------------------------- */
    .floating-heart {
      position: absolute;
      bottom: -10%;
      font-size: 2rem;
      color: #ff4d4d;
      opacity: 0.8;
      animation: floatUp 10s linear infinite;
      pointer-events: none; /* so hearts won't block clicks */
    }
    @keyframes floatUp {
      0% {
        transform: translateY(0) rotate(0deg);
      }
      100% {
        transform: translateY(-120vh) rotate(360deg);
      }
    }

    /* --------------------------------------------------------------------------
       4. MAIN CONTAINER & DANCE ANIMATION
    -------------------------------------------------------------------------- */
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      text-align: center;
      min-height: 100vh;
      padding: 1rem;
      position: relative;
      transition: transform 0.3s;
    }

    @keyframes wiggle {
      0%   { transform: rotate(-2deg); }
      50%  { transform: rotate(2deg); }
      100% { transform: rotate(-2deg); }
    }
    /* When .container.dance is active, it wiggles */
    .container.dance {
      animation: wiggle 0.2s ease-in-out infinite;
    }

    /* --------------------------------------------------------------------------
       5. HEADINGS & TEXT
    -------------------------------------------------------------------------- */
    h1 {
      font-size: 2.4rem;
      margin: 1rem 0;
    }
    p {
      font-size: 1.2rem;
      margin-bottom: 1rem;
    }

    /* --------------------------------------------------------------------------
       6. BUTTONS
    -------------------------------------------------------------------------- */
    button {
      background-color: #ff4d4d;
      color: white;
      border: none;
      padding: 1rem 2rem;
      font-size: 1rem;
      border-radius: 25px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.3s;
      margin: 0.5rem;
    }
    button:hover {
      background-color: #ff1a1a;
      transform: translateY(-2px);
    }
    #noBtn {
      position: relative; /* so we can move it around */
    }

    /* --------------------------------------------------------------------------
       7. GAME STEPS
    -------------------------------------------------------------------------- */
    #gameSteps {
      margin-top: 2rem;
    }
    .step {
      display: none; /* hidden initially, we show as we progress */
      margin-bottom: 2rem;
    }
    .step.active {
      display: block;
    }
    .step h2 {
      font-size: 1.8rem;
      margin-bottom: 0.75rem;
    }
    .answer-options {
      display: flex;
      gap: 1rem;
      justify-content: center;
      margin-top: 1rem;
    }

    /* --------------------------------------------------------------------------
       8. POPUP OVERLAY
    -------------------------------------------------------------------------- */
    #popupOverlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0, 0, 0, 0.5);
      display: none; /* hidden by default */
      align-items: center;
      justify-content: center;
      z-index: 999; /* on top of everything */
    }
    #popup {
      background: white;
      padding: 2rem;
      border-radius: 8px;
      text-align: center;
      max-width: 80%;
    }
    #popup h2 {
      margin-bottom: 1rem;
    }
    #popup button {
      margin-top: 1rem;
      background-color: #ff4d4d;
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 25px;
      border: none;
      font-size: 1rem;
      cursor: pointer;
    }

    /* --------------------------------------------------------------------------
       9. IMAGE GALLERY
    -------------------------------------------------------------------------- */
    #gallery {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 1rem;
      margin: 2rem 0;
    }
    .gallery-img {
      width: 200px;
      height: 150px;
      object-fit: cover;
      border: 2px solid #ff4d4d;
      border-radius: 8px;
    }

    /* --------------------------------------------------------------------------
       10. RESPONSIVENESS
    -------------------------------------------------------------------------- */
    @media (max-width: 600px) {
      button {
        padding: 0.8rem 1.2rem;
        font-size: 0.9rem;
      }
      h1 {
        font-size: 2rem;
      }
      .step h2 {
        font-size: 1.4rem;
      }
    }
  </style>
</head>
<body>

  <!-- Floating Hearts (duplicates for multiple hearts) -->
  <div class="floating-heart" style="left: 10%; animation-duration: 9s;">❤️</div>
  <div class="floating-heart" style="left: 30%; animation-duration: 11s;">❤️</div>
  <div class="floating-heart" style="left: 50%; animation-duration: 8s;">❤️</div>
  <div class="floating-heart" style="left: 70%; animation-duration: 12s;">❤️</div>
  <div class="floating-heart" style="left: 90%; animation-duration: 10s;">❤️</div>

  <!-- Main container -->
  <div class="container" id="mainContainer">
    <h1>Jessie Li, Will You Be My Valentine?</h1>
    <p>Welcome to our little Valentine’s game. I have a few questions for you!</p>

    <!-- Yes / No Buttons -->
    <div>
      <button id="yesBtn">Yes</button>
      <button id="noBtn">No</button>
    </div>

    <!-- Game Steps -->
    <div id="gameSteps">
      <!-- Step 2: Are you free on Feb 21? -->
      <div id="step2" class="step">
        <h2>Are You Free on February 21?</h2>
        <p>I’d love to spend some time together on that day!</p>
        <div class="answer-options">
          <button id="freeYes">Yes, I’m free!</button>
          <button id="freeNo">No, sorry!</button>
        </div>
      </div>

      <!-- Step 3: Cuisine Choice -->
      <div id="step3" class="step">
        <h2>Which cuisine are you craving?</h2>
        <p>Italian, Korean, or Chinese?</p>
        <div class="answer-options">
          <button class="cuisineBtn" data-choice="Italian">Italian</button>
          <button class="cuisineBtn" data-choice="Korean">Korean</button>
          <button class="cuisineBtn" data-choice="Chinese">Chinese</button>
        </div>
      </div>

      <!-- Step 4: Summary -->
      <div id="step4" class="step">
        <h2 id="summaryTitle"></h2>
        <p id="summaryText"></p>
        <button id="finalClose">OK</button>
      </div>
    </div>

    <!-- Image Gallery (No placeholders; real images used) -->
    <div id="gallery">
      <!-- 1. Heart Clipart -->
      <img class="gallery-img" 
           src="https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Red_heart.png/180px-Red_heart.png" 
           alt="Red Heart">
      <!-- 2. I Love You heart -->
      <img class="gallery-img" 
           src="https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/AM-heart-u.png/220px-AM-heart-u.png" 
           alt="I Love You Heart">
      <!-- 3. Valentine Candy -->
      <img class="gallery-img" 
           src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Valentines_Heart_Candy.jpg/220px-Valentines_Heart_Candy.jpg" 
           alt="Valentine Candy Heart">
    </div>
  </div>

  <!-- Popup Overlay -->
  <div id="popupOverlay">
    <div id="popup">
      <h2 id="popupText"></h2>
      <button id="popupCloseBtn">Close</button>
    </div>
  </div>

  <script>
    /* --------------------------------------------------------------------------
       1. ELEMENT REFERENCES
    -------------------------------------------------------------------------- */
    const yesBtn         = document.getElementById('yesBtn');
    const noBtn          = document.getElementById('noBtn');
    const step2          = document.getElementById('step2');
    const step3          = document.getElementById('step3');
    const step4          = document.getElementById('step4');
    const freeYes        = document.getElementById('freeYes');
    const freeNo         = document.getElementById('freeNo');
    const cuisineButtons = document.querySelectorAll('.cuisineBtn');
    const summaryTitle   = document.getElementById('summaryTitle');
    const summaryText    = document.getElementById('summaryText');
    const finalClose     = document.getElementById('finalClose');
    const popupOverlay   = document.getElementById('popupOverlay');
    const popupText      = document.getElementById('popupText');
    const popupCloseBtn  = document.getElementById('popupCloseBtn');
    const mainContainer  = document.getElementById('mainContainer');
    const body           = document.body;

    /* --------------------------------------------------------------------------
       2. STATE VARIABLES
    -------------------------------------------------------------------------- */
    let isFeb21Free = null;
    let chosenCuisine = null;

    /* --------------------------------------------------------------------------
       3. HELPER FUNCTIONS
    -------------------------------------------------------------------------- */
    function showPopup(message) {
      popupText.textContent = message;
      popupOverlay.style.display = 'flex';
    }
    function hidePopup() {
      popupOverlay.style.display = 'none';
    }

    function startDancing() {
      // Body changes background color in a disco loop
      body.classList.add('disco');
      // Container wiggles
      mainContainer.classList.add('dance');
    }

    /* --------------------------------------------------------------------------
       4. EVENT LISTENERS
    -------------------------------------------------------------------------- */
    // Close popup
    popupCloseBtn.addEventListener('click', hidePopup);

    // "Will You Be My Valentine?" -> YES
    yesBtn.addEventListener('click', () => {
      // Start dancing animations
      startDancing();

      // Show popup
      showPopup("Woohoo! I'm so happy you said YES! Let's get this party started!");

      // Move to step 2 after closing popup
      popupCloseBtn.onclick = () => {
        hidePopup();
        step2.classList.add('active');
      };
    });

    // "Will You Be My Valentine?" -> NO (button runs away)
    noBtn.addEventListener('mouseover', () => {
      const randomX = Math.floor(Math.random() * (window.innerWidth - 100));
      const randomY = Math.floor(Math.random() * (window.innerHeight - 50));
      noBtn.style.position = 'absolute';
      noBtn.style.left = randomX + 'px';
      noBtn.style.top = randomY + 'px';
    });

    // Step 2: "Are you free on Feb 21?"
    freeYes.addEventListener('click', () => {
      isFeb21Free = true;
      step2.classList.remove('active');
      step3.classList.add('active');
    });
    freeNo.addEventListener('click', () => {
      isFeb21Free = false;
      step2.classList.remove('active');
      step3.classList.add('active');
    });

    // Step 3: Cuisine choice
    cuisineButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        chosenCuisine = btn.dataset.choice; // e.g. "Italian", "Korean", "Chinese"
        step3.classList.remove('active');
        step4.classList.add('active');

        // Fill in summary
        summaryTitle.textContent = "Thank You for Answering!";
        let dateAnswer = isFeb21Free
          ? "You're free on February 21! Yay!"
          : "You're not free on February 21, but that's okay—we'll find another date!";
        let cuisineAnswer = `You chose ${chosenCuisine}. Yum!`;
        summaryText.textContent = `${dateAnswer} ${cuisineAnswer}`;
      });
    });

    // Step 4: Final close
    finalClose.addEventListener('click', () => {
      showPopup("Thanks for playing! Keep dancing and let's celebrate soon ♥");
      step4.classList.remove('active');
      popupCloseBtn.onclick = () => {
        hidePopup();
      };
    });
  </script>
</body>
</html>
